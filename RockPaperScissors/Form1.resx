<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxLogo.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>